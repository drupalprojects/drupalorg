<?php
// $Id$

/**
 * @file
 * This file provides the pivots_blocks that generates module recommendations.
 *
 * Current limitations/issues:
 *   1. Recommendation data is stored externally on master-other.drupal.org database.
 *      The reason to use external database is to give flexibility to developers to tweak the algorithm.
 *   2. "More" is disabled temporarily to make the code clearer, will be added later if needed.
 */

define('PID_CONVERSATION', 4151); // conversation pivot algorithm ID that displays related conversations
define('PID_DOUBLE', 4153);       // double pivot algorithm ID that displays related projects in different algorithms.
define('LIMIT_CONVERSATION', 5);
define('LIMIT_DOUBLE', 5);
define('LIMIT_MAX', 100);         // maximum items to display in the block or on a page.

function pivots_block_output() {
  if ($node = _pivots_project_get_project_from_menu()) {
    return _pivots_block_display_on_project($node->nid); 
  }
}

// Integrating module with Google Analytics http://drupal.org/node/284599
// Also mentioned in http://drupal.org/node/231451
function pivots_block_preprocess_page(&$variables) {
  if ($node = _pivots_project_get_project_from_menu()) {
    // inject GA tracking code when pivots_block is present.
    if (strpos($variables['right'], 'id="block-pivots_block-0"') !== FALSE) {
      $injection = "pageTracker._trackEvent('PivotsPageview_" .PID_DOUBLE. "', 'pivotsfrom_{$node->nid}');";
      $variables['closure'] = preg_replace('/(pageTracker._trackPageview\(\);)/', "$1$injection", $variables['closure']);        
    }
  }
}

function _pivots_block_display_on_project($node_id) {
  $output = '';
  $output .= _pivots_block_content($node_id, PID_CONVERSATION, t("Related discussions"), LIMIT_CONVERSATION);
  $output .= _pivots_block_content($node_id, PID_DOUBLE, t("Related projects"), LIMIT_DOUBLE); 
  return $output;
}

function _pivots_block_display_on_forum($node_id) {
  $output = '';
  $output = _pivots_block_content($node_id, PID_CONVERSATION, t("Projects mentioned in the discussion"), LIMIT_CONVERSATION); 
  return $output; 
}

function _pivots_block_content($node_id, $pivot_id, $title, $limit) {
  $output = '';
  $items = _pivots_block_generate_items($node_id, $pivot_id, $limit);  
  if (!empty($items)) {
    foreach ($items as $position => $item) {
      $items[$position] = l($item['title'], "node/{$item['nid']}", array( 'attributes' => array(
        "onClick" => "javascript:pageTracker._trackEvent('PivotsClick_${pivot_id}', 'pivotsfrom_${node_id}', 'pivotsto_${item['nid']}', '${position}');"
      )));
    }
    $output = theme('item_list', $items, $title); 
  }
  return $output;
}

function _pivots_block_generate_items($node_id, $pivot_id, $limit) {
  if ($limit <= 0) {
    $limit = LIMIT_MAX;
  }  
  
  db_set_active('pivots');  // NOTE: here we activate the pivots database.  
  // if there's database failure, we just pretend nothing happens whatsoever. pivots_block returns nothing in this case.
  $matches = @db_query("SELECT DISTINCT dest_id FROM {pivots_match} WHERE pivot_id=%d AND src_id=%d 
        AND dest_id<>%d ORDER BY score DESC", $pivot_id, $node_id, $node_id);
  db_set_active();  // NOTE: change back to use the default database
  
  $count = 0;
  $items = array();
  while (($match = @db_fetch_array($matches)) && $count < $limit) {
    $dest_id = $match['dest_id'];
    $result = db_query("SELECT title FROM {node} WHERE nid=%d AND status=1", $dest_id);
    // there might be cases that the node was deleted, or set to unpublished between pivots database refresh
    // so here we only count the valid node.
    $title = db_result($result);
    if ($title) {
      $items[] = array('nid' => $dest_id, 'title' => $title, 'pid' => $pivot_id);
      $count++;
    }
  }  
  return $items;
}

/**
 * Implementation of hook_block()
 */
function pivots_block_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('pivots_block: Recommendations');
      return $blocks;

    case 'view':
      $block['subject'] = t('Recommendations');
      $block['content'] = pivots_block_output();
      return $block;
  }
}

/**
 * Copied from project.module,v 1.349 2009/04/11 02:21:12 dww
 */
function _pivots_project_get_project_from_menu() {
  if (($node = menu_get_object('project_node')) ||
      (($node = menu_get_object()) && $node->type == 'project_project')) {
    return $node;
  }
}

