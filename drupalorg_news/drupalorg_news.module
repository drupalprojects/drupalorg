<?php

/**
 * @file
 *   Custom code for the news page, planet Drupal and similar pages.
 */

/**
 * Vocabulary used for news forum topic tagging.
 */
define('DRUPALORG_NEWS_VID', 34);

/**
 * Planet Drupal category in the aggregator.
 */
define('DRUPALORG_PLANET_CATEGORY', 2);

/**
 * Implements hook_menu().
 */
function drupalorg_news_menu() {
  $items['news'] = array(
    'title' => 'Drupal News',
    'page callback' => 'drupalorg_news_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Use the regular node page, but with a title.
 */
function drupalorg_news_page() {
  $output = node_page_default();
  drupal_set_title(t('Drupal News'));
  return $output;
}

/**
 * Remove the news vocabulary on forum forms, if the user is not an admin. Used
 * to mark news forum topics with tags.
 */
function drupalorg_news_field_widget_form_alter(&$element, &$form_state, $context) {
  if ($context['field']['field_name'] === 'taxonomy_vocabulary_' . DRUPALORG_NEWS_VID) {
    $element['#access'] = user_access('administer nodes');
  }
}

/**
 * Implementation of template_preprocess_drupalorg_home().
 */
function drupalorg_news_preprocess_drupalorg_home(&$vars) {
  $vars['tab_content_news'] = drupalorg_news_short_block();
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function drupalorg_news_short_block() {
  // Get the first few news items ordered by descending publication date.
  $nids = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('status', 1)
    ->condition('promote', 1)
    ->orderBy('created', 'DESC')
    ->range(0, 6)
    ->addTag('node_access')
    ->execute()
    ->fetchCol();

  $fresh_news = '';
  $news_count = 0;
  foreach ($nids as $nid) {
    $node = node_load($nid);
    if ($news_count == 0) {
      // The first news item has a blurb displayed.
      $fresh_news .= '<h3>' . l($node->title, 'node/' . $node->nid) . '</h3>';
      $fresh_news .= '<p class="submitted">' . format_date($node->created, 'custom', 'F j, Y') . '</p>';
      // Cut it to short and sweet to fit into the design. Strip all tags,
      // so things like big images, distracting links and paragraph tags will
      // not end up here. The text should be good in itself to display.
      $fresh_news .= '<p>' . text_summary(strip_tags($node->body[LANGUAGE_NONE]['0']['summary']), $node->body[LANGUAGE_NONE]['0']['format'], 180) . ' ' . l(t('Read more'), 'node/' . $node->nid) . '</p>';
    }
    else {
      // Rest of the items have just their title displayed.
      $fresh_news .= '<h3>' . l($node->title, 'node/' . $node->nid) . '</h3>';
    }
    $news_count += 1;

  }
  // Finally, we have a link to the rest of the items
  $fresh_news .= '<footer>' . l(t('More News'), 'news', array('attributes' => array('class' => 'button-link'))) . '</footer>';

  return $fresh_news;
}

/**
 * Implements hook_block_info().
 */
function drupalorg_news_block_info() {
  return array(
    'planet-list' => array(
      'info' => t('Planet Drupal subscriptions'),
    ),
    'drupal-news' => array(// for dashboard
      'info' => t('Drupal News'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function drupalorg_news_block_view($delta) {
  switch ($delta) {
    case 'planet-list':
      $description = db_query("SELECT description FROM aggregator_category WHERE cid = :cid", array(':cid' => DRUPALORG_PLANET_CATEGORY))->fetchField();

      $query = db_select('aggregator_feed', 'f')->fields('f');
      $query->leftJoin('aggregator_category_feed', 'c', 'f.fid = c.fid');
      $query->condition('c.cid', DRUPALORG_PLANET_CATEGORY)->orderBy('f.title', 'ASC');
      $results = $query->execute();

      $list = '<div class="item-list"><ul>';
      $counter = 0;
      foreach($results as $feed) {
        $list .= '<li>' . l($feed->title, $feed->link) . ' (' . l(t('feed'), $feed->url) . ')</li>';
        $counter += 1;
      }
      $list .= '</ul></div>';

      $output = '<p>' . filter_xss_admin($description) . ' ' . t('Collecting posts from the following @num sources:', array('@num' => $counter)) . '</p>';
      $output .= $list;
      $output .= theme('feed_icon', array('url' => 'planet/rss.xml', 'title' => t('Drupal planet')));
      return array('content' => $output);

    case 'drupal-news':
      return array(
        'subject' => t('Drupal News'),
        'content' => drupalorg_news_short_block(),
      );
  }
}
